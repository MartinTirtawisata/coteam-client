{"version":3,"sources":["img/sketch.png","img/engagement.png","img/culture.jpg","img/network-people.png","local-storage.js","config.js","actions/utils.js","actions/auth.js","reducer/auth.js","actions/actionIndex.js","reducer/reducerIndex.js","store.js","validators.js","components/dashboard.js","components/card-banner.js","components/section.js","components/userboard.js","components/input.js","components/registration-form.js","actions/user.js","components/registration-section.js","components/login-form.js","components/login-section.js","components/social-card-form.js","components/dropdown-select.js","components/tag-select.js","components/card-form-edit.js","components/card-form-add.js","components/card-form-delete.js","components/landingpage.js","components/app.js","index.js"],"names":["module","exports","__webpack_require__","p","clearAuthToken","localStorage","removeItem","e","API_BASE_URL","process","REACT_APP_API_BASE_URL","normalizeResponseErrors","res","ok","headers","has","get","startsWith","json","then","err","Promise","reject","code","status","message","statusText","SET_AUTH_TOKEN","setAuthToken","authToken","type","CLEAR_AUTH","clearAuth","AUTH_REQUEST","authRequest","AUTH_SUCCESS","AUTH_ERROR","authError","error","storeAuthInfo","dispatch","currentUser","decodedToken","jwtDecode","user","setItem","saveAuthToken","logout","getState","auth","login","username","password","fetch","concat","method","Content-Type","body","JSON","stringify","console","log","catch","SubmissionError","_error","initialState","loading","FETCH_PROTECTED_CARD_SUCCESS","FETCH_PROTECTED_CARD_ERROR","fetchProtectedCard","Authorization","card","fetchProtectedCardSuccess","store","createStore","combineReducers","form","formReducer","state","arguments","length","undefined","action","Object","assign","index","applyMiddleware","thunk","getItem","token","_ref","field","Meta","Card","Dashboard","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","onClickDelete","window","location","href","inherits","createClass","key","value","props","_this2","cardFlexBoxStyle","minWidth","margin","borderRadius","cardInfo","keys","map","i","parseInt","cards","react_default","a","createElement","Link","to","_id","es_card","className","hoverable","style","cover","avatar","width","shape","size","icon","actions","onClick","title","first_name","last_name","es_button","display","React","Component","connect","CardBanner","iconStyle","paddingRight","fontSize","job_title","personality","target","rel","Step","Steps","Section","expParsedArray","experience","split","experiences","exp","currentExp","interests","interest","intText","tag","skills","skill","cardStyle","marginLeft","backgroundColor","borderColor","thought","steps","progressDot","direction","current","UserBoard","userInfo","match","params","userId","card_banner_CardBanner","section_Section","Input","prevProps","meta","active","input","focus","warning","touched","htmlFor","name","label","id","ref","userInput","placeholder","required","nonEmpty","trim","isTrimmed","passwordLength","min","max","matchesPassword","allValues","RegistrationForm","values","content-type","reason","defineProperty","registerUser","onSubmit","handleSubmit","Field","component","validate","htmlType","disabled","pristine","submitting","block","reduxForm","onSubmitFail","errors","loggedIn","Redirect","components_registration_form","LoginForm","aria-live","handleClick","components_login_form","SocialCardForm","Option","Select","DropDownSelect","onChange","es_select","defaultValue","TagSelect","mode","tokenSeparators","CardFormEdit","submitStatus","setState","socialCardId","editCard","CardFormAdd","addCard","CardFormDelete","LandingPage","flex","alt","src","networkPeople","sketch","landingpage_Meta","description","engagement","marginTop","culture","height","fontWeight","App","onClickLogout","BrowserRouter","Route","exact","path","render","components_dashboard","RegistrationSection","LoginSection","ReactDOM","es","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.b4be5dcf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sketch.757543f0.png\";","module.exports = __webpack_public_path__ + \"static/media/engagement.f32382a2.png\";","module.exports = __webpack_public_path__ + \"static/media/culture.b5328835.jpg\";","module.exports = __webpack_public_path__ + \"static/media/network-people.e0baa5bb.png\";","export const loadAuthToken = () => {\n    return localStorage.getItem('authToken');\n};\n\nexport const saveAuthToken = authToken => {\n    try {\n        localStorage.setItem('authToken', authToken);\n    } catch (e) {}\n};\n\nexport const clearAuthToken = () => {\n    try {\n        localStorage.removeItem('authToken');\n    } catch (e) {}\n};","export const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api';","export const normalizeResponseErrors = res => {\n    if (!res.ok) {\n        if (\n            res.headers.has('content-type') &&\n            res.headers.get('content-type').startsWith('application/json')\n        ) {\n            // It's a nice JSON error returned by us, so decode it\n            return res.json().then(err => Promise.reject(err));\n        }\n        // It's a less informative error returned by express\n        return Promise.reject({\n            code: res.status,\n            message: res.statusText\n        });\n    }\n    return res;\n};","import jwtDecode from 'jwt-decode';\nimport {SubmissionError} from 'redux-form';\n\nimport {API_BASE_URL} from '../config';\nimport {normalizeResponseErrors} from './utils';\nimport {saveAuthToken, clearAuthToken} from '../local-storage';\n\nexport const SET_AUTH_TOKEN = \"SET_AUTH_TOKEN\";\nexport const setAuthToken = authToken => ({\n    type: SET_AUTH_TOKEN,\n    authToken\n});\n\nexport const CLEAR_AUTH = \"CLEAR_AUTH\";\nexport const clearAuth = () => ({\n    type: CLEAR_AUTH\n});\n\nexport const AUTH_REQUEST = 'AUTH_REQUEST';\nexport const authRequest = () => ({\n    type: AUTH_REQUEST\n})\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const authSuccess = currentUser => ({\n    type: AUTH_SUCCESS,\n    currentUser\n});\n\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const authError = error => ({\n    type: AUTH_ERROR,\n    error\n});\n\nconst storeAuthInfo = (authToken, dispatch) => {\n    const decodedToken = jwtDecode(authToken);\n    dispatch(setAuthToken(authToken));\n    dispatch(authSuccess(decodedToken.user));\n    saveAuthToken(authToken);\n}\nexport const logout = () => (dispatch, getState) => {\n    const authToken = getState().auth.authToken;\n    dispatch(clearAuth());\n    clearAuthToken(authToken);\n}\nexport const login = (username, password) => dispatch => {\n    dispatch(authRequest());\n    return (\n        fetch(`${API_BASE_URL}/auth/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username, password\n            })\n        }).then(res => {\n            console.log(normalizeResponseErrors(res))\n            return normalizeResponseErrors(res)\n        }).then(res => {\n            // console.log(res.json())\n            return res.json()\n        }).then((authToken) => {\n            console.log('reached 3')\n            console.log(authToken)\n            return storeAuthInfo(authToken, dispatch)\n        }).catch(err => {\n            const {code} = err;\n            const message = code === 401 ? 'Incorrect username or password' : 'Unable to login, please try again';\n            dispatch(authError(err));\n            return Promise.reject(\n                new SubmissionError({\n                    _error: message\n                })\n            );\n        })\n    );\n};\n\nexport const refreshAuthToken = () => (dispatch, getState) => {\n    dispatch(authRequest());\n    const authToken = getState().auth.authToken;\n    return fetch(`${API_BASE_URL}/auth/refresh`, {\n        method: 'POST',\n        headers: {\n            // Provide our existing token as credentials to get a new one\n            Authorization: `Bearer ${authToken}`\n        }\n    })\n        .then(res => normalizeResponseErrors(res))\n        .then(res => res.json())\n        .then(({authToken}) => storeAuthInfo(authToken, dispatch))\n        .catch(err => {\n            // We couldn't get a refresh token because our current credentials\n            // are invalid or expired, or something else went wrong, so clear\n            // them and sign us out\n            dispatch(authError(err));\n            dispatch(clearAuth());\n            clearAuthToken(authToken);\n        });\n};\n\n\n","import {SET_AUTH_TOKEN, CLEAR_AUTH, AUTH_REQUEST, AUTH_SUCCESS, AUTH_ERROR, AUTH_LOGOUT} from '../actions/auth';\n\nconst initialState = {\n    authToken: null, \n    currentUser: null, \n    loading: false, \n    error: null\n}\n\nexport default function authReducer(state = initialState, action){\n    if (action.type === SET_AUTH_TOKEN){\n        return Object.assign({}, state, {\n            authToken: action.authToken\n        });\n    } else if (action.type === CLEAR_AUTH) {\n        return Object.assign({}, state, {\n            authToken: null,\n            currentUser: null\n        });\n    } else if (action.type === AUTH_REQUEST) {\n        return Object.assign({}, state, {\n            loading: true,\n            error: null\n        });\n    } else if (action.type === AUTH_SUCCESS) {\n        return Object.assign({}, state, {\n            loading: false,\n            currentUser: action.currentUser\n        });\n    } else if (action.type === AUTH_ERROR) {\n        return Object.assign({}, state, {\n            loading: false,\n            error: action.error\n        });\n    } \n    return state;\n}","import {SubmissionError} from 'redux-form';\nimport {API_BASE_URL} from '../config';\nimport {normalizeResponseErrors} from './utils';\n\nexport const addCard = (card) => dispatch => {\n    return fetch(`${API_BASE_URL}/card`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(\n            card\n        )\n    }).then(res => {\n        return normalizeResponseErrors(res)\n    }).then(res => {\n        return res.json()\n    }).catch(err => {\n        const {reason, message, location} = err;\n        if (reason === \"ValidationError\"){\n            return Promise.reject(new SubmissionError({\n                [location]: message\n            }))\n        };\n    })\n}\n\nexport const editCard = (card, socialCardId) => dispatch => {\n    return fetch(`${API_BASE_URL}/card/${socialCardId}`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(card)\n    }).then (res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .catch(err => {\n        const {reason, message, location} = err;\n        if (reason === \"ValidationError\"){\n            return Promise.reject(new SubmissionError({\n            [location]: message\n            }))\n        };\n    })\n}\n\nexport const deleteCard = (socialCardId) => dispatch => {\n    return fetch(`${API_BASE_URL}/card/${socialCardId}`, {\n        method: 'DELETE'\n    }).then (res => normalizeResponseErrors(res))\n    .then(res=> res.json())\n    .catch(err => {\n        const {reason, message, location} = err;\n        if (reason === \"ValidationError\"){\n            return Promise.reject(new SubmissionError({\n                [location]: message\n            }))\n        }\n    })\n}\n\nexport const FETCH_PROTECTED_CARD_SUCCESS = \"FETCH_PROTECTED_CARD_SUCCESS\";\nexport const fetchProtectedCardSuccess = card => ({\n    type: FETCH_PROTECTED_CARD_SUCCESS,\n    card\n});\n\nexport const FETCH_PROTECTED_CARD_ERROR = \"FETCH_PROTECTED_CARD_ERROR\";\nexport const fetchProtectedCardError = error => ({\n    type: FETCH_PROTECTED_CARD_ERROR,\n    error\n})\n\nexport const fetchProtectedCard = () => (dispatch, getState) => {\n    const authToken = getState().auth.authToken\n    // console.log(authToken);\n    return fetch(`${API_BASE_URL}/card`,\n        {method: 'GET',\n        headers: {\n            Authorization: `Bearer ${authToken}`\n        }\n    }).then(res => {\n        // console.log(normalizeResponseErrors(res))\n        return normalizeResponseErrors(res)\n    }).then(res => {\n        // console.log(typeof res.json())\n        return res.json()\n    }).then((card) => {\n        // console.log(typeof card)\n        return dispatch(fetchProtectedCardSuccess(card))\n    }).catch(err => {\n        dispatch(fetchProtectedCardError(err))\n    })\n}\n\n// export const fetchSurvey = () => dispatch => {\n//     fetch(`${API_BASE_URL}/survey`).then(res => {\n//         if(!res.ok){\n//             return Promise.reject(res.statusText);\n//         }\n//         return res.json();\n//     }).then(survey => {\n//         dispatch(fetchSurveySuccess(survey));\n//     })\n// }","import {FETCH_PROTECTED_CARD_SUCCESS, FETCH_PROTECTED_CARD_ERROR} from \"../actions/actionIndex\";\n\nconst initialState = {\n    card: '',\n    error: null\n}\n\nexport default function indexReducer(state = initialState, action){\n    if (action.type === FETCH_PROTECTED_CARD_SUCCESS){\n        // console.log(action.card)\n        return Object.assign({}, state, {\n            card: action.card,\n            error: null\n        });\n    } else if (action.type === FETCH_PROTECTED_CARD_ERROR){\n        return Object.assign({}, state, {\n            error: action.error\n        })\n    }\n    return state;\n};\n","import {createStore, applyMiddleware, combineReducers} from 'redux';\nimport {reducer as formReducer} from 'redux-form';\nimport thunk from 'redux-thunk';\nimport {loadAuthToken} from './local-storage';\nimport authReducer from './reducer/auth';\nimport indexReducer from './reducer/reducerIndex';\nimport {setAuthToken, refreshAuthToken} from './actions/auth';\n\nconst store = createStore(combineReducers({\n    form: formReducer, \n    auth: authReducer,\n    index: indexReducer\n\n}), applyMiddleware(thunk));\n\nconst authToken = loadAuthToken();\nif (authToken){\n    const token = authToken;\n    store.dispatch(setAuthToken(token));\n    store.dispatch(refreshAuthToken());\n}\nexport default store;","export const required = value => (value ? undefined : 'Required');\nexport const nonEmpty = value =>\n    value.trim() !== '' ? undefined : 'Cannot be empty';\nexport const isTrimmed = value =>\n    value.trim() === value ? undefined : 'Cannot start or end with whitespace';\nexport const length = length => value => {\n    if (length.min && value.length < length.min) {\n        return `Must be at least ${length.min} characters long`;\n    }\n    if (length.max && value.length > length.max) {\n        return `Must be at most ${length.max} characters long`;\n    }\n};\nexport const matches = field => (value, allValues) =>\n    field in allValues && value.trim() === allValues[field].trim()\n        ? undefined\n        : 'Does not match';","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {fetchProtectedCard} from '../actions/actionIndex';\n\n// Import third party libraries\nimport './dashboard.css';\nimport 'antd/dist/antd.css';\nimport {Card, Icon, Button, Avatar} from 'antd';\nconst {Meta} = Card;\n\nexport class Dashboard extends React.Component {\n    componentDidMount(){\n        this.props.dispatch(fetchProtectedCard())\n    }\n\n    onClickDelete = () => {\n        window.location.href = window.location.href \n    }\n\n    render(){\n        const cardFlexBoxStyle = {\n            minWidth: '220px',\n            margin: '20px',\n            borderRadius: '7px'\n        }\n\n        const createNewProfileStyle = {\n            display: 'block',\n            margin: '10px auto 10px auto',\n            borderRadius: '5px'\n        }\n\n        const cardInfo = Object.keys(this.props.card).map((key, index) => {\n            let i = parseInt(key, 10);\n            let cards = (this.props.card[i]); \n            return (\n                <div key={index}>\n                    <Link to={`/userboard/${cards._id}`}>\n                        <Card \n                            className=\"hover-effect\"\n                            hoverable \n                            style={cardFlexBoxStyle} \n                            cover={<Avatar style={{width: '100%'}} shape=\"square\" size={150} icon=\"user\" />}\n                            actions=\n                            {[\n                                <Link to={`card-form-edit/${cards._id}`}>\n                                    <Icon type=\"edit\" />\n                                </Link>, \n                                <Link onClick={this.onClickDelete} to={`/card-form-delete/${cards._id}`}>\n                                    <Icon type=\"delete\" />\n                                </Link>\n                            ]}\n                        >\n                            <Meta title={`${cards.first_name} ${cards.last_name}`}/>\n                            \n                        </Card>\n                    </Link>\n                </div>\n            )\n        });\n       \n        return (\n            <div className=\"dashboard\">\n                <div className=\"dashboard-header\">\n                    <Link to=\"/card-form-add\">\n                        <Button className=\"hover-effect\" style={createNewProfileStyle} type=\"dashed\" size=\"large\">Create A New Profile</Button>\n                    </Link> \n                </div>\n                <div className=\"dashboard-section\">\n                    {cardInfo}  \n                </div>  \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    card: state.index.card,\n})\n\nexport default connect(mapStateToProps)(Dashboard);\n\n","import React from 'react';\nimport './card-banner.css';\nimport 'antd/dist/antd.css';\n\nimport {Avatar, Icon} from 'antd';\n\nexport default class CardBanner extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {}\n    }\n    render(){\n        const iconStyle = {\n            paddingRight: '15px',\n            fontSize: '20px'\n        }\n\n        return (\n            <div className=\"banner\">\n                <div className=\"banner-header\">\n                    <div className=\"banner-header-avatar\">\n                        <Avatar shape=\"circle\" size={100} icon=\"user\" />\n                    </div>\n                    <div className=\"banner-header-user\">\n                        <h1>{this.props.card.first_name} {this.props.card.last_name}</h1> \n                        <p>{this.props.card.job_title}</p>\n                        <p>Personality: {this.props.card.personality}</p>\n                    </div>\n                    <div className=\"banner-header-progress-dashboard\">\n                        {/* <Progress style={{paddingRight:'50px'}} size=\"small\" type=\"dashboard\" percent={90} width={100} format={(percent) => `${percent}% Profile Done`}  /> */}\n                        </div>\n                        <div className=\"banner-header-progress-line\">   \n                        {/* <Progress percent={90} size=\"small\" format={(percent) => `${percent}%`}/> */}\n                    </div>\n                </div>\n                <div className=\"banner-footer\">\n                    <a href=\"https://facebook.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-media-links\"><Icon style={iconStyle} type=\"facebook\" /></a>\n                    <a href=\"https://instagram.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-media-links\"><Icon style={iconStyle} type=\"instagram\" /></a>\n                    <a href=\"https://github.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-media-links\"><Icon style={iconStyle} type=\"github\" /></a>\n                    <a href=\"https://medium.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-media-links\"><Icon style={iconStyle} type=\"medium\" /></a>\n                    <a href=\"https://linkedin.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-media-links\"><Icon style={iconStyle} type=\"linkedin\" /></a>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './section.css';\nimport 'antd/dist/antd.css';\n\nimport {Steps, Card, Tag} from 'antd';\n\nconst Step = Steps.Step;\n\nexport default class Section extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {}\n    }\n    \n    render (){\n        var expString = `${this.props.card.experience}`;\n        var expParsedArray = expString.split(\",\");\n        const experiences = expParsedArray.map(exp => (\n            <Step title={exp} />\n        ));\n        let currentExp = expParsedArray.length - 1\n\n        let interestString = `${this.props.card.interest}`;\n        let interestParsedArray = interestString.split(\",\");\n        let interests = interestParsedArray.map(intText => (\n            <Tag>{intText}</Tag>\n        ));\n\n        let skillString = `${this.props.card.skill}`;\n        let skillsParsedArray = skillString.split(\",\");\n        let skills = skillsParsedArray.map(skill => (\n            <Tag>{skill}</Tag>\n        ));\n\n        const cardStyle = { \n            width: '85%', \n            borderRadius: '4px',\n            marginLeft: '25px',\n            backgroundColor: 'rgba(51,51,51,0.1)',\n            borderColor: 'rgb(51,51,51)'\n        }\n            \n        \n\n\n        return (\n            <div className=\"section\">\n            \n                <div className=\"section-header\">\n                <h1>My Definition of Teamwork</h1>\n                    \n                    <div className=\"section-header-content\">\n                        <Tag><span className=\"quote\">\"</span>{this.props.card.thought}<span className=\"quote\">\"</span></Tag>\n                    </div>\n                </div>\n\n                <div className=\"mid-section\">\n                    <div className=\"section-left col-6\">\n                        <h1>Experiences</h1>\n                        <Steps className=\"font-color\" style={{marginLeft: '25px'}} progressDot direction=\"vertical\" size=\"default\" current={currentExp}>\n                            {experiences}\n                        </Steps>\n                    </div>\n                    <div className=\"section-right col-6\">\n                        <h1>About</h1>\n                            <Card title=\"Interests\" style={cardStyle}>\n                                {interests}\n                            </Card>\n                            <br></br>\n                            <Card title=\"Skills\" style={cardStyle}>\n                                {skills}       \n                            </Card>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './userboard.css';\nimport 'antd/dist/antd.css';\n\nimport CardBanner from './card-banner';\nimport Section from './section';\nimport {connect} from 'react-redux';\nimport {fetchProtectedCard} from '../actions/actionIndex';\n\nexport class UserBoard extends React.Component {\n    componentDidMount(){\n        this.props.dispatch(fetchProtectedCard())\n    }\n    \n    render (){      \n        const userInfo = Object.keys(this.props.card).map((key, index) => {\n            let i = parseInt(key, 10);\n            if (this.props.card[i]._id === this.props.match.params.userId){\n                return (\n                  <div>\n                      <CardBanner card={this.props.card[i]} />\n                      <Section card={this.props.card[i]} />\n                  </div>\n                )\n            }\n        });\n        \n        return(\n            <div className=\"userboard\">\n                {userInfo}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    card: state.index.card\n})\nexport default connect(mapStateToProps)(UserBoard)","import React from 'react';\n\nexport default class Input extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (!prevProps.meta.active && this.props.meta.active) {\n            this.input.focus();\n        }\n    }\n\n    render() {\n        let error;\n        if (this.props.meta.touched && this.props.meta.error) {\n            error = <div className=\"form-error\">{this.props.meta.error}</div>;\n        }\n\n        let warning;\n        if (this.props.meta.touched && this.props.meta.warning) {\n            warning = (\n                <div className=\"form-warning\">{this.props.meta.warning}</div>\n            );\n        }\n        return (\n            <div className=\"form-input\">\n                <label htmlFor={this.props.input.name}>\n                    {this.props.label}\n                    {error}\n                    {warning}\n                </label>\n                <input\n                    {...this.props.input}\n                    id={this.props.input.name}\n                    type={this.props.type}\n                    ref={userInput => (this.input = userInput)}\n                    placeholder={this.props.placeholder}\n                />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Input from './input';\nimport { Button } from 'antd';\nimport './registration-form.css';\nimport {Field, reduxForm, focus} from 'redux-form';\nimport {registerUser} from '../actions/user';\nimport {login} from '../actions/auth';\n\nimport {required, nonEmpty, matches, length, isTrimmed} from '../validators';\nconst passwordLength = length({min: 10, max: 72});\nconst matchesPassword = matches('password');\n\n\n\nexport class RegistrationForm extends React.Component{\n    onSubmit(values){\n        console.log(values);\n        const {username, password} = values;\n        const user = {username, password};\n        return this.props.dispatch(registerUser(user)).then(() => this.props.dispatch(login(username, password)));\n    };\n\n    render(){\n        return (\n            <form\n                className=\"registration-form\"\n                onSubmit={this.props.handleSubmit(values =>\n                    this.onSubmit(values)\n                )}>\n                <label htmlFor=\"username\">Email or Username</label>\n                <Field\n                    component={Input}\n                    type=\"text\"\n                    name=\"username\"\n                    validate={[required, nonEmpty, isTrimmed]}\n                    placeholder=\"Email or Username\"\n                />\n                <label htmlFor=\"password\">Password</label>\n                <Field\n                    component={Input}\n                    type=\"password\"\n                    name=\"password\"\n                    validate={[required, passwordLength, isTrimmed]}\n                    placeholder=\"Password\"\n                />\n                <label htmlFor=\"passwordConfirm\">Confirm password</label>\n                <Field\n                    component={Input}\n                    type=\"password\"\n                    name=\"passwordConfirm\"\n                    validate={[required, nonEmpty, matchesPassword]}\n                    placeholder=\"Confirm Password\"\n                />\n\n                <Button htmlType=\"submit\" disabled={this.props.pristine || this.props.submitting} style={{display: 'block', margin: '20px auto 0 auto', width: '25%'}} block>Log In</Button>\n            </form>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: 'register',\n    onSubmitFail: (errors, dispatch) =>\n        dispatch(focus('register', Object.keys(errors)[0]))})(RegistrationForm);\n","import {SubmissionError} from 'redux-form';\n\nimport {API_BASE_URL} from '../config';\nimport {normalizeResponseErrors} from './utils';\n\nexport const registerUser = user => dispatch => {\n    return fetch(`${API_BASE_URL}/users/register`, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(user)\n    })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .catch(err => {\n        const {reason, message, location} = err;\n        if (reason === \"ValidationError\"){\n            return Promise.reject(new SubmissionError({\n                [location]: message\n            }))\n        };\n    });\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nimport RegistrationForm from './registration-form';\n\nexport function RegistrationSection(props) {\n    // If we are logged in (which happens automatically when registration\n    // is successful) redirect to the user's dashboard\n    console.log(props.loggedIn)\n    if (props.loggedIn) {\n        return <Redirect to=\"/dashboard\" />;\n    }\n\n    return (\n        <div className=\"home\">\n            <RegistrationForm />\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    loggedIn: state.auth.currentUser !== null\n});\n\nexport default connect(mapStateToProps)(RegistrationSection);","import React from 'react';\nimport {Field, reduxForm, focus} from 'redux-form';\nimport Input from './input';\nimport { Button } from 'antd';\nimport {Redirect} from 'react-router-dom';\nimport {login} from '../actions/auth';\nimport {required, nonEmpty} from '../validators';\nimport './login-form.css'\n\nexport class LoginForm extends React.Component{\n    onSubmit(values){\n        console.log(values)\n        return this.props.dispatch(login(values.username, values.password));\n    }\n\n    handleClick(){\n        return <Redirect to=\"/dashboard\" />\n    }\n\n    render(){\n        let error;\n        if (this.props.error) {\n            error = (\n                <div className=\"form-error\" aria-live=\"polite\">\n                    {this.props.error}\n                </div>\n            );\n        }\n        return (\n            <form\n                className=\"login-form\"\n                onSubmit={this.props.handleSubmit(values =>\n                    this.onSubmit(values)\n                )}>\n                {error}\n                <label htmlFor=\"username\">Username</label>\n                <Field\n                    component={Input}\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    validate={[required, nonEmpty]}\n                    placeholder=\"Username or Email\"\n                />\n                <label htmlFor=\"password\">Password</label>\n                <Field\n                    component={Input}\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    validate={[required, nonEmpty]}\n                    placeholder=\"Password\"\n                />\n                <Button onClick={this.handleClick()} htmlType=\"submit\" style={{display: 'block', margin: '20px auto 0 auto', width: '25%'}} block>Log In</Button>\n\n            </form>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: 'login',\n    onSubmitFail: (errors, dispatch) => dispatch(focus('login', 'username'))\n})(LoginForm);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nimport LoginForm from './login-form';\n\nexport function LoginSection(props) {\n    // If we are logged in (which happens automatically when registration\n    // is successful) redirect to the user's dashboard\n    console.log(props.loggedIn)\n    if (props.loggedIn) {\n        return <Redirect to=\"/dashboard\" />;\n    }\n\n    return (\n        <div className=\"home\">\n            <LoginForm />\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    loggedIn: state.auth.currentUser !== null\n});\n\nexport default connect(mapStateToProps)(LoginSection);","import React from 'react';\nimport Input from './input';\nimport './social-card-form.css';\nimport {Field, reduxForm, focus} from 'redux-form';\n// import {createSocialCard} from '../actions/actionIndex'\nimport {required, nonEmpty} from '../validators';\n\nexport class SocialCardForm extends React.Component {\n\n    render(){\n        return (\n            <form\n            className=\"social-card-form\"\n            onSubmit={this.props.handleSubmit(values =>\n            this.onSubmit(values))}\n            >\n                <label htmlFor=\"first_name\">First name</label>\n                <Field\n                    component={Input}\n                    type=\"text\"\n                    name=\"first_name\"\n                    validate={[required, nonEmpty]}\n                />\n                <label htmlFor=\"last_name\">Last name</label>\n                <Field\n                    component={Input}\n                    type=\"text\"\n                    name=\"last_name\"\n                    validate={[required, nonEmpty]}\n                />\n                <label htmlFor=\"job_title\">Job Title</label>\n                <Field\n                    component={Input}\n                    type=\"text\"\n                    name=\"job_title\"\n                    validate={[required, nonEmpty]}\n                />\n                <label htmlFor=\"experience\">Experiences</label>\n                <Field\n                    component={Input}\n                    type=\"text\"\n                    name=\"experience\"\n                    validate={[required, nonEmpty]}\n                />\n                <label htmlFor=\"interest\">Interests</label>\n                <Field\n                    component={Input}\n                    type=\"text\"\n                    name=\"interest\"\n                    validate={[required, nonEmpty]}\n                />\n                <label htmlFor=\"personality\">Personalities</label>\n                <Field\n                    component={Input}\n                    type=\"text\"\n                    name=\"personality\"\n                    validate={[required, nonEmpty]}\n                />\n                <label htmlFor=\"skill\">Skills</label>\n                <Field\n                    component={Input}\n                    type=\"text\"\n                    name=\"skill\"\n                    validate={[required, nonEmpty]}\n                />\n                <label htmlFor=\"thought\">Thoughts</label>\n                <Field\n                    component={Input}\n                    type=\"text\"\n                    name=\"thought\"\n                    validate={[required, nonEmpty]}\n                />\n                <button\n                    type=\"submit\"\n                    disabled={this.props.pristine || this.props.submitting}>\n                    Submit\n                </button>\n        </form>\n    \n        )\n    }\n    \n}\n\nexport default reduxForm({form: 'createSocialCard', onSubmitFail: (errors, dispatch) => dispatch(focus('createSocialCard', Object.keys(errors)[0]))})(SocialCardForm);\n","import React from 'react';\nimport { Select } from 'antd';\n\nconst Option = Select.Option;\n\nexport default class DropDownSelect extends React.Component {\n    componentDidMount(){\n        console.log(this.props);\n    }\n    componentDidUpdate(prevProps) {\n        if (!prevProps.meta.active && this.props.meta.active) {\n            this.input.focus();\n        }\n    }\n\n    onChange(value){\n        console.log(value)\n        this.props.input.onChange(value);\n    }\n\n    render() {\n        let error;\n        if (this.props.meta.touched && this.props.meta.error) {\n            error = <div className=\"form-error\">{this.props.meta.error}</div>;\n        }\n\n        let warning;\n        if (this.props.meta.touched && this.props.meta.warning) {\n            warning = (\n                <div className=\"form-warning\">{this.props.meta.warning}</div>\n            );\n        }\n        return (\n            <div className=\"form-input\">\n                <label htmlFor={this.props.input.name}>\n                    {this.props.label}\n                    {error}\n                    {warning}\n                </label>\n                <Select defaultValue=\"Neutral\" onChange={value => this.onChange(value)}>\n                    <Option value=\"Introvert\">Introvert</Option>\n                    <Option value=\"Extrovert\">Extrovert</Option>\n                </Select>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Select } from 'antd';\n\nexport default class TagSelect extends React.Component {\n    componentDidMount(){\n        console.log(this.props);\n    }\n    componentDidUpdate(prevProps) {\n        if (!prevProps.meta.active && this.props.meta.active) {\n            this.input.focus();\n        }\n    }\n\n    onChange(value){\n        console.log(value)\n        this.props.input.onChange(value);\n    }\n\n    render() {\n        let error;\n        if (this.props.meta.touched && this.props.meta.error) {\n            error = <div className=\"form-error\">{this.props.meta.error}</div>;\n        }\n\n        let warning;\n        if (this.props.meta.touched && this.props.meta.warning) {\n            warning = (\n                <div className=\"form-warning\">{this.props.meta.warning}</div>\n            );\n        }\n        return (\n            <div className=\"form-input\">\n                <label htmlFor={this.props.input.name}>\n                    {this.props.label}\n                    {error}\n                    {warning}\n                </label>\n                <Select mode=\"tags\" tokenSeparators={[',']} onChange={value => this.onChange(value)} />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Input from './input';\nimport DropDownSelect from './dropdown-select';\nimport TagSelect from './tag-select';\nimport './card-form.css';\nimport {Redirect} from 'react-router-dom';\nimport {Field, reduxForm, focus} from 'redux-form';\nimport {editCard} from '../actions/actionIndex'\n\nexport class CardFormEdit extends React.Component {\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            submitStatus: false\n        }\n    }\n    onSubmit(values){\n        this.setState({submitStatus: true})\n        console.log(values);\n        console.log(this.props.match.params.userId)\n        const socialCardId = this.props.match.params.userId\n        const {first_name, last_name, job_title, experience, interest, personality, skill, thought} = values;\n        const card = {first_name, last_name, job_title, experience, interest, personality, skill, thought};\n        return this.props.dispatch(editCard(card, socialCardId))\n    }\n\n    render(){\n        \n        \n        if (this.state.submitStatus === true){\n            return <Redirect to=\"/dashboard\" />\n        }\n    \n        return (\n            \n            <form className=\"card-edit-form\" onSubmit={this.props.handleSubmit(values => this.onSubmit(values))}>\n                <fieldset><h1>Edit Your Profile</h1></fieldset>\n                <label htmlFor=\"first_name\">First name</label>\n                <Field component={Input} type=\"text\" name=\"first_name\" />\n                <label htmlFor=\"last_name\">Last name</label>\n                <Field component={Input} type=\"text\" name=\"last_name\" />\n                <label htmlFor=\"job_title\">Job Title</label>\n                <Field component={Input} type=\"text\" name=\"job_title\" /> \n                <label htmlFor=\"personality\">Personality</label>\n                <Field component={DropDownSelect} name=\"personality\"/>\n                <label htmlFor=\"experience\">Experiences</label>\n                <Field component={TagSelect} name=\"experience\"/>\n                <label htmlFor=\"interest\">Interests</label>\n                <Field component={TagSelect} name=\"interest\"/>\n                <label htmlFor=\"skill\">Skills</label>\n                <Field component={TagSelect} name=\"skill\"/>            \n                <label htmlFor=\"thought\">What are your thoughts on teamwork?</label>\n                <Field component={Input} type=\"text\" name=\"thought\" />\n                <button className=\"card-edit-submit-btn\" type=\"submit\" disabled={this.props.pristine || this.props.submitting}>\n                    Save\n                </button>\n            </form>\n    \n        )\n    }\n    \n}\n\nexport default reduxForm({form: 'editCard', onSubmitFail: (errors, dispatch) => dispatch(focus('editCard', Object.keys(errors)[0]))})(CardFormEdit);\n","import React from 'react';\nimport Input from './input';\nimport DropDownSelect from './dropdown-select';\nimport TagSelect from './tag-select';\nimport './card-form.css';\nimport {Redirect} from 'react-router-dom';\nimport {Field, reduxForm, focus} from 'redux-form';\nimport {addCard} from '../actions/actionIndex'\nimport {nonEmpty, required} from '../validators';\n\nexport class CardFormAdd extends React.Component {\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            submitStatus: false\n        }\n    }\n    onSubmit(values){\n        this.setState({submitStatus: true})\n        console.log(values);\n        const {first_name, last_name, job_title, experience, interest, personality, skill, thought} = values;\n        const card = {first_name, last_name, job_title, experience, interest, personality, skill, thought};\n        return this.props.dispatch(addCard(card))\n    }\n\n    render(){\n        if (this.state.submitStatus === true){\n            return <Redirect to=\"/dashboard\" />\n        }\n    \n        return (\n            <form className=\"card-edit-form\" onSubmit={this.props.handleSubmit(values => this.onSubmit(values))}>\n                <fieldset><h1>Create Your Profile</h1></fieldset>\n                <label htmlFor=\"first_name\">First name</label>\n                <Field component={Input} type=\"text\" name=\"first_name\" required={[nonEmpty, required]} />\n                <label htmlFor=\"last_name\">Last name</label>\n                <Field component={Input} type=\"text\" name=\"last_name\" />\n                <label htmlFor=\"job_title\">Job Title</label>\n                <Field component={Input} type=\"text\" name=\"job_title\" /> \n                <label htmlFor=\"personality\">Personality</label>\n                <Field component={DropDownSelect} name=\"personality\"/>\n                <label htmlFor=\"experience\">Experiences</label>\n                <Field component={TagSelect} name=\"experience\"/>\n                <label htmlFor=\"interest\">Interests</label>\n                <Field component={TagSelect} name=\"interest\"/>\n                <label htmlFor=\"skill\">Skills</label>\n                <Field component={TagSelect} name=\"skill\"/>            \n                <label htmlFor=\"thought\">What are your thoughts on teamwork?</label>\n                <Field component={Input} type=\"text\" name=\"thought\" />\n                <button className=\"card-edit-submit-btn\" type=\"submit\" disabled={this.props.pristine || this.props.submitting}>\n                    Save\n                </button>\n           \n            </form>\n    \n        )\n    }\n    \n}\n\nexport default reduxForm({form: 'addCard', onSubmitFail: (errors, dispatch) => dispatch(focus('addCard', Object.keys(errors)[0]))})(CardFormAdd);\n","import React from 'react';\nimport './card-form.css';\nimport {Redirect} from 'react-router-dom';\n\nimport {deleteCard} from '../actions/actionIndex';\nimport { connect } from 'react-redux';\n\nexport class CardFormDelete extends React.Component {\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            submitStatus: false\n        }\n    }\n\n    componentDidMount(){\n        this.setState({submitStatus: true})\n        this.props.dispatch(deleteCard(this.props.match.params.userId));\n    }\n\n\n    render(){\n        if (this.state.submitStatus === true){ \n            return <Redirect to=\"/dashboard\" />\n        }\n    \n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n\nexport default connect()(CardFormDelete)","import React from 'react';\nimport './landingpage.css';\nimport {Link} from 'react-router-dom';\nimport sketch from '../img/sketch.png';\nimport engagement from '../img/engagement.png';\nimport culture from '../img/culture.jpg';\nimport networkPeople from '../img/network-people.png'\nimport {Card, Button} from 'antd';\nconst { Meta } = Card;\n\n\nexport default class LandingPage extends React.Component {\n    render() {\n        const cardStyle = {\n            width: '100%',\n            flex: '1',\n            margin: '0 10px',\n            borderRadius: '3px'\n        }\n\n        const buttonStyle = {\n            height: '40px',\n            width: '160px',\n            fontWeight: 'bold',\n            fontSize: '16px'\n        }\n        return(\n            <div className=\"landing-page\">\n                <h1>Coteam</h1>\n                <div className=\"landing-page-header\">\n                    \n                    <div className='left-header'>\n                        <p>Coteam is a platform that allows users to create a personal profile to share with their team to facilitate a better team engagement and environment. </p>\n                    </div>\n                    <div className='right-header'>\n                        <img alt=\"network of people\" style={{display: 'block', margin: '0 auto', width: '650px'}} src={networkPeople}/>\n                    </div>\n                </div>\n\n                <h2>Build a better culture</h2>\n                <div className=\"landing-page-section\">\n                    \n                    <Card style={cardStyle} cover={<img src={sketch} alt=\"sketch\" />}>\n                        <Meta title=\"Create\" description=\"Create a social profile and share them with your team!\"/>\n                    </Card>\n                    <Card style={cardStyle} cover={<img src={engagement} alt=\"engagement\" />}>\n                        <Meta style={{marginTop: '50px'}} title=\"Engagement\" description=\"Engage your team by making your team know each other better!\"/>\n                    </Card>\n                    <Card style={cardStyle} cover={<img src={culture} alt=\"culture\" />}>\n                        <Meta style={{marginTop: '40px'}} title=\"Culture\" description=\"Create a company culture that empowers people!\"/>\n                    </Card>\n                </div>\n                <div className=\"landing-page-footer\">\n                    <Link to=\"/register\"><Button style={buttonStyle} type=\"primary\">Sign Up Now!</Button></Link>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport Dashboard from './dashboard';\nimport UserBoard from './userboard';\nimport RegistrationSection from './registration-section';\nimport LoginSection from './login-section';\nimport SocialCardForm from './social-card-form';\nimport CardFormEdit from './card-form-edit';\nimport CardFormAdd from './card-form-add';\nimport CardFormDelete from './card-form-delete';\nimport LandingPage from './landingpage';\n\nimport {logout} from '../actions/auth';\n\nimport './app.css';\nimport './float-grid.css';\n\nexport class App extends React.Component {\n    componentDidMount(){\n        console.log(this.props.loggedIn)\n    }\n\n    onClickLogout = () => {\n        return this.props.dispatch(logout());\n    }\n    render(){\n        let logout;\n        let login;\n        if (this.props.loggedIn !== null) {\n            logout = <div>\n                        <li><Link to=\"/dashboard\">Dashboard</Link></li>\n                        <li><Link onClick={this.onClickLogout} to=\"/\">Log Out</Link></li>\n                    </div>;\n        } \n        \n        if (!(this.props.loggedIn)){\n        login = <div> \n                    <li><Link to=\"/register\">Sign Up</Link></li>\n                    <li><Link to=\"/login\">Log In</Link></li>\n                </div>\n        }\n        return (\n            <Router>\n                <div>\n                    <nav className=\"top-navbar\">\n                        <ul className=\"logo-nav\">\n                            <li><Link to=\"/\">Coteam</Link></li>\n                            \n                        </ul>\n                        <ul className=\"login-register-nav\">\n                            {logout}\n                            {login}\n                        </ul>\n                    </nav>\n                    <Route exact path=\"/\" component={LandingPage} />      \n                    <main>\n                        <Route exact path=\"/dashboard\" render={() => <Dashboard />} />\n                        <Route exact path=\"/userboard/:userId\" component={UserBoard} />\n                        <Route exact path=\"/register\" component={RegistrationSection} />\n                        <Route exact path=\"/login\" component={LoginSection} />\n                        <Route exact path='/social-card' component={SocialCardForm} />\n                        <Route exact path='/card-form-edit/:userId' component={CardFormEdit}/>\n                        <Route exact path='/card-form-delete/:userId' component={CardFormDelete}/>\n                        <Route exact path=\"/card-form-add\" component={CardFormAdd} />\n                    </main>\n            \n                </div>\n            </Router>\n        );\n    }\n}\nconst mapStateToProps = state => ({\n    loggedIn: state.auth.currentUser\n})\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport store from './store';\n\nimport './index.css';\n\nimport App from './components/app';\n\n// Creating mock data\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,    \n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}